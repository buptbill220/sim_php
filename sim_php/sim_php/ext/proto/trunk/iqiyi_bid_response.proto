// This file is derived from the OpenRTB specification.

//package ads_serving.proto;

message Settlement {
    // Algorithm for price and auth.
    optional uint32 version = 1;

    // Encrypted price.
    required bytes price = 2;

    // Authentication information for bidid and price.
    optional bytes auth = 3;
}

message Bid {
    // ID for the bid object chosen by the bidder for tracking and
    // debugging purposes. Useful when multiple bids are submitted
    // for a single impression for a given seat.
    required string id = 1;

    // ID of the impression object to which this bid applies.
    required string impid = 2;

    // Bid price in CPM.
    required int32 price = 3;

    // Actual ad markup. XHTML if a response to a banner object, or
    // VAST XML if a response to a video object.
    required string adm = 6;

    // Advertiser's identity information. Typically, it is a top-level domain
    // of the advertiser, but id in other forms is also OK. This field will be
    // deduced from "crid" automatically.
    optional string adomain = 7;

    // The id of the creative to be presented to viewers. This field should be
    // populated with the "tvid" that is responded when the creative is uploaded.
    required string crid = 10;

    // For internal use of exchange and DSP can omit this field.
    optional Settlement settlement = 12;

    // For internal use of exchange and DSP can omit this field.
    optional uint64 dsp = 13;

    // The unique identifier of DSP on the exchange.
    optional int64 dsp_id = 14;

    // For internal use of exchange and DSP can omit this field.
    optional int32 final_bidfloor = 15;

    // Video advertising time has been fallen into sereral time slices:
    // 5s, 15s, 15s and so on.
    // 1) The startday from BidRequest is 0, then
    // 0, 5, 20, 35 and so on are legal values.
    // 2) The startday from BidRequest is not 0 for example x, then
    // legal value is x + n * 15, n = 0, 1, 2, ...
    // 3) -1 stands for the last time slice of preroll.
    // Note: If DSP accepts adjustment of startdelay, this field should not be
    // set so the DSP will get more opportunity to win the impression.
    optional int32 startdelay = 16;

    // Duration time of creative video, which can fall into two catogories:
    // 1) Including the 1st 5s time slice such as 5s, 20s, 35s and so on.
    // Thus 5s using the 1st time slice, 20s using the 1st and 2nd time slices,
    // 35s using the 1st, 2nd and 3th time slices.
    // 2) Excluding the 1st 5s time slice such as 15s, 30s, 45s and so on.
    // Thus 15s using one 15s time slice, 30s using two continuous 15s time
    // slices, 45s using three continuous 15s time slices.
    // Note: DSP should only bid for continuous time slices and this value
    // MUST less than or equal to the "maxduration" from BidRequest.
    // The field will be duduced from "crid" automatically.
    optional int32 duration = 17;
}

message Seatbid {
    // Array of bid objects; each bid object relates to an imp object
    // in the bid request. Note that, if supported by an exchange,
    // one imp object can have many bid objects.
    repeated Bid bid = 1;
}

message BidResponse {
    // This id should be the same as the id of the corresponding BidRequest.
    required string id = 1;

    // Array of seatbid objects.
    repeated Seatbid seatbid = 2;

    // Please set this to the processing time in milliseconds from when you
    // received the request to when you returned the response.
    optional int32 processing_time_ms = 4;
}
